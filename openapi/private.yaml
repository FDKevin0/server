openapi: 3.0.2
info:
  title: "Bangumi Private API"
  version: ""
  description: "`next.bgm.tv` 域名不支持跨域，"
servers:
  - url: https://next.bgm.tv
    description: Production server
paths:
  "/p/login":
    post:
      tags:
        - Auth
      summary: 登录
      operationId: login
      description: |
        `h-captcha-response` 是 [hCaptcha 的验证码](https://docs.hcaptcha.com/#add-the-hcaptcha-widget-to-your-webpage)

        site key 是 `4874acee-9c6e-4e47-99ad-e2ea1606961f`
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
                - password
                - h-captcha-response
              properties:
                email:
                  type: string
                password:
                  type: string
                h-captcha-response:
                  type: string
      responses:
        "200":
          description: "账号密码正确，设置 Cookies"
          headers:
            Set-Cookie:
              description: 设置 cookies session
              schema:
                type: string
                example: sessionID=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"

        "400":
          description: 请求错误或者验证码错误
          content:
            application/json:
              example:
                "title": "Bad Request"
                "details":
                  - "Email为必填字段"
                  - "Password为必填字段"
                  - "HCaptchaResponse为必填字段"
                "description": "can't validate request body"
              schema:
                title: ErrorDetail
                required:
                  - title
                  - description
                  - detail
                type: object
                properties:
                  title:
                    title: Title
                    type: string
                  description:
                    title: Description
                    type: string
                  detail:
                    title: Detail
                    type: array
                    items:
                      type: string

        "401":
          description: 账号或密码错误
          content:
            application/json:
              schema:
                title: ErrorDetail
                required:
                  - title
                  - description
                  - detail
                type: object
                properties:
                  title:
                    title: Title
                    type: string
                  description:
                    title: Description
                    type: string
                  detail:
                    title: Detail
                    type: object
                    properties:
                      "remain":
                        type: integer
                        description: 剩余可用登录次数。

        "422":
          description: "无法以 JSON 格式解析请求"

        "502":
          description: hCaptcha HTTP 请求失败

  "/p/logout":
    post:
      tags:
        - Auth
      summary: 登出
      operationId: logout
      security:
        - CookiesSession: []
      responses:
        "204":
          description: "正常登出"

        "401":
          description: 用户未登录或者 session 已失效

  "/p/me":
    get:
      summary: 登出
      operationId: getCurrentUser
      security:
        - CookiesSession: []
      responses:
        "200":
          description: "返回当前用户"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: 用户未登录或者 session 已失效
  "/p/subjects/{subject_id}/topics":
    get:
      tags:
        - 条目
        - 讨论
      summary: 获取条目全部讨论
      operationId: getSubjectTopicsById
      parameters:
        - required: true
          schema:
            title: Subject ID
            minimum: 0
            type: integer
          name: subject_id
          in: path
        - required: true
          schema:
            title: Limit
            maximum: 100
            minimum: 0
            type: integer
            default: 30
          name: limit
          in: query
        - required: true
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Paged_Topic"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
      security:
        - OptionalHTTPBearer: []
  "/p/subjects/{subject_id}/topics/{topic_id}":
    get:
      tags:
        - 条目
        - 讨论
      summary: 获取条目讨论内容
      operationId: getSubjectTopicById
      parameters:
        - required: true
          description: 可以填`-`
          schema:
            title: Subject ID
            minimum: 0
            type: integer
          name: subject_id
          in: path
        - required: true
          schema:
            title: Topic ID
            minimum: 0
            type: integer
          name: topic_id
          in: path
        - required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 0
            type: integer
            default: 30
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Topic"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
      security:
        - OptionalHTTPBearer: []
  "/p/indices/{index_id}/comments":
    get:
      tags:
        - 目录
        - 讨论
      summary: 获取目录讨论内容
      operationId: getIndexCommentsById
      parameters:
        - required: true
          schema:
            title: Index ID
            minimum: 0
            type: integer
          name: index_id
          in: path
        - required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 0
            type: integer
            default: 30
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Comments"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
      security:
        - OptionalHTTPBearer: []
  "/p/episodes/{episode_id}/comments":
    get:
      tags:
        - 章节
        - 讨论
      summary: 获取章节讨论内容
      operationId: getEpisodeCommentsById
      parameters:
        - required: true
          schema:
            title: Episode ID
            minimum: 0
            type: integer
          name: episode_id
          in: path
        - required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 0
            type: integer
            default: 30
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Comments"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
      security:
        - OptionalHTTPBearer: []
  "/p/characters/{character_id}/comments":
    get:
      tags:
        - 角色
        - 讨论
      summary: 获取角色讨论内容
      operationId: getCharacterCommentsById
      parameters:
        - required: true
          schema:
            title: Character ID
            minimum: 0
            type: integer
          name: character_id
          in: path
        - required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 0
            type: integer
            default: 30
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Comments"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
      security:
        - OptionalHTTPBearer: []
  "/p/persons/{person_id}/comments":
    get:
      tags:
        - 人物
        - 讨论
      summary: 获取人物讨论内容
      operationId: getPersonCommentsById
      parameters:
        - required: true
          schema:
            title: Persoon ID
            minimum: 0
            type: integer
          name: person_id
          in: path
        - required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 0
            type: integer
            default: 30
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Comments"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
      security:
        - OptionalHTTPBearer: []
components:
  schemas:
    User:
      $ref: "./components/user.yaml"
    Avatar:
      $ref: "./components/avatar.yaml"
    ErrorDetail:
      $ref: "./components/error_detail.yaml"
    Paged_Topic:
      title: Paged[Topic]
      type: object
      properties:
        total:
          title: Total
          type: integer
          default: 0
        limit:
          title: Limit
          type: integer
          default: 0
        offset:
          title: Offset
          type: integer
          default: 0
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/Topic"
          default: []
    Topic:
      title: Topic
      required:
        - id
        - replies
        - title
        - created_at
        - creator
      type: object
      properties:
        id:
          title: ID
          type: integer
        replies:
          title: Replies Count
          type: integer
        title:
          title: Title
          type: string
        creator:
          "$ref": "#/components/schemas/Creator"
        created_at:
          title: Created At
          type: string
          format: date-time
        comments:
          "$ref": "#/components/schemas/Comments"
    Comments:
      title: Comments
      required:
        - data
        - has_more
        - limit
        - offset
      type: object
      properties:
        data:
          title: Comment Array
          type: array
          items:
            "$ref": "#/components/schemas/Comment"
          default: []
        has_more:
          title: Has More Data
          type: bool
        limit:
          title: Limit
          type: integer
        offset:
          title: Offset
          type: integer
    Comment:
      title: Comment
      required:
        - id
        - text
        - created_at
        - creator
      type: object
      properties:
        id:
          title: ID
          type: integer
        text:
          title: Content Text
          type: string
        creator:
          "$ref": "#/components/schemas/Creator"
        created_at:
          title: Created At
          type: string
          format: date-time
    Creator:
      title: Creator
      required:
        - username
        - nickname
      type: object
      properties:
        username:
          title: Username
          type: string
        nickname:
          title: Nickname
          type: string
      description: 意义同<a href="#model-Me">Me</a>
  securitySchemes:
    CookiesSession:
      name: sessionID
      type: apiKey
      in: cookie
